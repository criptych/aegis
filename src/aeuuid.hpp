////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////

#ifndef __AEUUID_HPP__
#define __AEUUID_HPP__ 1

////////////////////////////////////////////////////////////////////////////////

#include <cinttypes>
#include <string>

////////////////////////////////////////////////////////////////////////////////

struct aeUuid {
    enum Version {
        MAC = 1,
        DCE,
        MD5,
        Random,
        SHA1,
    };

    uint8_t data[16];

    aeUuid(Version version = Version::Random);
    aeUuid(uint32_t data1, uint16_t data2, uint16_t data3, uint8_t data4[8]);

    operator std::string() const;

    Version version() const;

    static const aeUuid Nil;
};

////////////////////////////////////////////////////////////////////////////////

bool operator == (const aeUuid &lhs, const aeUuid &rhs);
bool operator != (const aeUuid &lhs, const aeUuid &rhs);

////////////////////////////////////////////////////////////////////////////////

typedef aeUuid aeGuid;

////////////////////////////////////////////////////////////////////////////////

#endif // __AEUUID_HPP__

////////////////////////////////////////////////////////////////////////////////
//  EOF
////////////////////////////////////////////////////////////////////////////////

