////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////

#ifndef __AELAYER_HPP__
#define __AELAYER_HPP__ 1

////////////////////////////////////////////////////////////////////////////////

#include "aegeom.hpp"
#include "aesymbol.hpp"
#include "aetypes.hpp"

////////////////////////////////////////////////////////////////////////////////

struct aeFeature {
    aeOID id;
    aeGeometry *geometry;
    aeSymbol *symbol;
};

class aeLayer {
public:
private:
    std::vector<aeFeature> mFeatures;
};

////////////////////////////////////////////////////////////////////////////////

#endif // __AELAYER_HPP__

////////////////////////////////////////////////////////////////////////////////
//  EOF
////////////////////////////////////////////////////////////////////////////////

