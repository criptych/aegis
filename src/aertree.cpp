////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////

#include "aertree.hpp"

////////////////////////////////////////////////////////////////////////////////

template <typename K, typename T>
std::vector<K> aeRtreeT<K, T>::search(const aeExtentT<T> &extent) const {
    //!@todo
    return std::vector<K>();
}

////////////////////////////////////////////////////////////////////////////////

template std::vector<unsigned long> aeRtreeT<unsigned long, double>::search(
    const aeExtentT<double> &extent
) const;

template std::vector<void*> aeRtreeT<void*, double>::search(
    const aeExtentT<double> &extent
) const;

////////////////////////////////////////////////////////////////////////////////
//  EOF
////////////////////////////////////////////////////////////////////////////////

